# PolyDice Build and Deploy Pipeline
# Build (new Docker image) on any of:
#  - Merge Request Opened/Updated/Merged
#  - Merge or push on the default branch
# Deployment (Available after build):
#  - Staging (Using the commit-hash tagged image) (manually triggerable)
#  - Production (Using the newly created :latest tag)

stages:
  - build
  - deploy

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind # Docker-in-docker, runs on Gitlab infra
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = ':latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "${CI_REGISTRY_IMAGE}/client${tag}" .
    - docker push "${CI_REGISTRY_IMAGE}/client${tag}"
    - echo TAGGED_IMAGE="${CI_REGISTRY_IMAGE}/client${tag}" >> image.env
  artifacts:
    reports:
      dotenv: image.env # Save generated image name/tag for later stages
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      exists:
        - Dockerfile
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      exists:
        - Dockerfile

deploy-staging:
  image: 
    name: bitnami/kubectl:latest
    entrypoint: ['']
  stage: deploy
  needs:
    - job: docker-build
      artifacts: true
  when: manual
  script:
    - kubectl config get-contexts
    - kubectl config use-context partavate/infrastructure:partavate-production-k8s
    - kubectl set image --namespace websites deployment/polydice-client-staging polydice-client=${TAGGED_IMAGE}
    - kubectl patch deployment polydice-client-staging --namespace websites -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"build\":\"$CI_COMMIT_SHORT_SHA\"}}}}}}"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      exists:
        - Dockerfile

deploy-production:
  image: 
    name: bitnami/kubectl:latest
    entrypoint: ['']
  stage: deploy
  needs:
    - job: docker-build
      artifacts: true
  when: manual
  script:
    - kubectl config get-contexts
    - kubectl config use-context partavate/infrastructure:partavate-production-k8s
    - kubectl set image --namespace websites deployment/polydice-client polydice-client=${TAGGED_IMAGE}
    - kubectl patch deployment polydice-client --namespace websites -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"build\":\"$CI_COMMIT_SHORT_SHA\"}}}}}}"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH